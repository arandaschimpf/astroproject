---
const { taskDescription} = Astro.props;
const randomId = Math.random().toString(36).substring(7);
---

<div
  class="flex items-center gap-2 h-12 border-b bg-white border-hint pl-4 task transition-all duration-700 overflow-hidden"
>
  <input
    type="checkbox"
    id=`checkbox-${randomId}`
    class="checkbox flex items-center justify-center relative peer shrink-0
    appearance-none w-5 h-5 border-[.75px] border-hint rounded-full bg-white"
  />
  <svg
    class="absolute w-5 h-full p-[.18rem] mt-0.5 text-selected
      max-w-0 peer-checked:max-w-5 pointer-events-none peer-checked:transition-all peer-checked:duration-300 transition-all duration-200"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="square"
    stroke-linejoin="miter"
  >
    <polyline points="20 6 9 17 4 12"></polyline>
  </svg>
  <div class="flex items-center justify-center bg-white h-full">
    <div
      class="flex mix-blend-difference bg-negativeHint h-0 transition-all duration-200 translate-y-[2px]"
      id=`strikethrough-${randomId}`
    >
      <label
        id=`label-${randomId}`
        for=`checkbox-${randomId}`
        class="flex items-center text-negativeGeneral mix-blend-difference text-xl translate-y-[-2px]"
        >{taskDescription}</label
      >
    </div>
  </div>
</div>
